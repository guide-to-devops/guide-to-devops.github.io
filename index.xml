<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>Guide to DevOps</title>
      <link>https://guide-to-devops.github.io</link>
      <description>Last 10 notes on Guide to DevOps</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Kubernetes 환경에서의 안정성 테스트가 필요하다면? - 카오스 엔지니어링</title>
    <link>https://guide-to-devops.github.io/blog/k8s-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EC%9D%98-%EC%95%88%EC%A0%95%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%B9%B4%EC%98%A4%EC%8A%A4-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81</link>
    <guid>https://guide-to-devops.github.io/blog/k8s-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EC%9D%98-%EC%95%88%EC%A0%95%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%B9%B4%EC%98%A4%EC%8A%A4-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81</guid>
    <description>🧪카오스 엔지니어링이란? 카오스 엔지니어링이란, 개발 중인 시스템의 안정성을 테스트하기 위해 임의적으로 장애 상황을 조성하는 기법을 말합니다. 그래서 혼란이란 뜻의 카오스(Chaos)가 이름에 붙은 것인데요. 카오스 엔지니어링을 통해 시스템상에서의 취약점은 없는지 알 수 있기 때문에 시스템을 더욱 안정적으로 만들 수 있죠.</description>
    <pubDate>Fri, 06 Sep 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>Kubernetes 1.31 릴리즈! - 주요 업데이트 소개</title>
    <link>https://guide-to-devops.github.io/blog/Kubernetes-v1.31-%EB%A6%B4%EB%A6%AC%EC%A6%88!---%EC%A3%BC%EC%9A%94-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EC%86%8C%EA%B0%9C</link>
    <guid>https://guide-to-devops.github.io/blog/Kubernetes-v1.31-%EB%A6%B4%EB%A6%AC%EC%A6%88!---%EC%A3%BC%EC%9A%94-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EC%86%8C%EA%B0%9C</guid>
    <description>지난 8월에 Kubernetes v1.31이 릴리즈되었습니다. 프로젝트 네임은 Elli인데요. Kubernetes 10주년 이후 처음 릴리즈되는 이번 버전에서도 다양한 기능이 안정화되고 새로운 기능도 추가되었습니다. 그중 아래 주요 업데이트에 대해 소개해드리겠습니다. AppArmor 지원 기능 Stable 단계로 상향 PersistentVolume의 lastTransitionTime Stable 단계로 상향 이미지 볼륨 지원 기능 추가 (Alpha 단계) 🛡️AppArmor 지원 기능 Stable 단계로 상향 AppArmor는 리눅스 서버를 보호하기 위해 특정 애플리케이션이 네트워크나 파일 등에 접근하는 것을 제한하는 보안 모듈입니다.</description>
    <pubDate>Sun, 01 Sep 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>블록체인 개발에 적용 가능한 DevOps</title>
    <link>https://guide-to-devops.github.io/blog/%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8-%EA%B0%9C%EB%B0%9C%EC%97%90-%EC%A0%81%EC%9A%A9-%EA%B0%80%EB%8A%A5%ED%95%9C-DevOps</link>
    <guid>https://guide-to-devops.github.io/blog/%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8-%EA%B0%9C%EB%B0%9C%EC%97%90-%EC%A0%81%EC%9A%A9-%EA%B0%80%EB%8A%A5%ED%95%9C-DevOps</guid>
    <description>⛓️블록체인 개발에 DevOps를 도입한다면 블록체인은 최근 큰 관심을 이끈 기술입니다. 분산 거래 기록 시스템이라고도 불리는데요. 지금도 블록체인은 다양한 곳에서 활용되고 있고, 수많은 블록체인 프로젝트도 개발 및 유지보수되고 있습니다. 블록체인은 네트워크를 구성하고 있는 노드들이 네트워크에서 발생하는 데이터를 함께 검증해서 무결성을 증명해내는 기술이기 때문에, 시간이 흘러 블록체인 네트워크가 성숙해질수록 효율적인 네트워크 관리와 보안 사고 예방이 매우 중요해집니다.</description>
    <pubDate>Sun, 25 Aug 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>Infrastructure as Code (IaC) 알아보기</title>
    <link>https://guide-to-devops.github.io/blog/Infrastructure-as-Code-(IaC)-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</link>
    <guid>https://guide-to-devops.github.io/blog/Infrastructure-as-Code-(IaC)-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</guid>
    <description>⚙️Infrastructure as Code란 우리가 애플리케이션을 배포하고 서비스를 운영하려면 서버, 스토리지, 네트워크 등과 같은 인프라 설정이 필요한데요. 인프라 구축을 애플리케이션 배포 때마다 매번 직접 수동으로 한다면 시간도 오래 걸리고 지루한 작업이 될 것입니다.</description>
    <pubDate>Sun, 18 Aug 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>LLMOps를 위한 오픈소스 플랫폼 Dify 알아보기</title>
    <link>https://guide-to-devops.github.io/blog/LLMOps%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%94%8C%EB%9E%AB%ED%8F%BC-Dify</link>
    <guid>https://guide-to-devops.github.io/blog/LLMOps%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%94%8C%EB%9E%AB%ED%8F%BC-Dify</guid>
    <description>🛠️LLMOps와 오픈소스 툴 Dify LLMOps는 우리가 지난 글에서 알아본 것처럼, 대규모 언어 모델(LLM)을 효율적으로 개발하고 운영하기 위한 방법론과 프로세스를 의미하는데요. 이런 LLMOps를 위한 오픈소스 LLM 애플리케이션 개발 플랫폼 Dify에 대해 소개해드리고자 합니다.</description>
    <pubDate>Sun, 11 Aug 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>플랫폼 엔지니어링이란?</title>
    <link>https://guide-to-devops.github.io/blog/%ED%94%8C%EB%9E%AB%ED%8F%BC-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81%EC%9D%B4%EB%9E%80</link>
    <guid>https://guide-to-devops.github.io/blog/%ED%94%8C%EB%9E%AB%ED%8F%BC-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81%EC%9D%B4%EB%9E%80</guid>
    <description>⚙️플랫폼 엔지니어링이란? 우리가 DevOps에 대해 검색을 하다보면 함께 떠오르는 키워드가 하나 있습니다. 바로 플랫폼 엔지니어링인데요. 최근 저도 플랫폼 엔지니어링이란 키워드를 많이 접하게 되면서 플랫폼 엔지니어링이 구체적으로 무엇을 말하는지 궁금했고, 이번 기회에 정리를 해봤습니다.</description>
    <pubDate>Sun, 04 Aug 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>kubectl 플러그인 매니저 krew 사용해보기</title>
    <link>https://guide-to-devops.github.io/blog/kubectl-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EB%A7%A4%EB%8B%88%EC%A0%80-krew-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0</link>
    <guid>https://guide-to-devops.github.io/blog/kubectl-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EB%A7%A4%EB%8B%88%EC%A0%80-krew-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0</guid>
    <description>🔎krew란? Kubernetes를 운영 및 관리할 때 가장 많이 사용하는 툴이라고 하면 역시 kubectl일 텐데요. kubectl 덕분에 우린 커맨드 창에서 Kubernetes의 각 Object를 배포, 관리, 테스트할 수 있습니다. 이런 kubectl을 더욱 편리하고 효율적으로 사용할 수 있도록 도와주는 플러그인이 다양한 사람들에 의해 개발되고 있다는 사실, 알고 계셨나요? krew는 이렇게 개발되는 kubectl 플러그인을 저장하고 배포하는 플러그인 매니저입니다.</description>
    <pubDate>Sun, 28 Jul 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>Liveness, Readiness, Startup Probe 비교</title>
    <link>https://guide-to-devops.github.io/blog/Liveness,-Readiness,-Startup-Probe-%EC%86%8C%EA%B0%9C-%EB%B0%8F-%EB%B9%84%EA%B5%90</link>
    <guid>https://guide-to-devops.github.io/blog/Liveness,-Readiness,-Startup-Probe-%EC%86%8C%EA%B0%9C-%EB%B0%8F-%EB%B9%84%EA%B5%90</guid>
    <description>🔎Kubernetes의 Container Probe란? Kubernetes에서 Pod를 배포하면 Pod에서 정의한 컨테이너가 실행되는데요. 컨테이너 내부에서 실행되어야 하는 프로세스가 정상 작동할 때 비로소 Pod를 통해 원하는 서비스를 이용할 수 있게 됩니다. Pod를 배포하고 운영하다보면 동작 중이던 컨테이너의 상태가 정상인지 주기적으로 확인이 필요할 때가 있습니다.</description>
    <pubDate>Tue, 09 Jul 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>ollama와 crewAI로 로컬 환경에 블로그 포스팅 시스템 구축</title>
    <link>https://guide-to-devops.github.io/blog/ollama%EC%99%80-crewAI%EB%A1%9C-%EB%A1%9C%EC%BB%AC-%ED%99%98%EA%B2%BD%EC%97%90-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8C%85-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95</link>
    <guid>https://guide-to-devops.github.io/blog/ollama%EC%99%80-crewAI%EB%A1%9C-%EB%A1%9C%EC%BB%AC-%ED%99%98%EA%B2%BD%EC%97%90-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8C%85-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95</guid>
    <description>🦙🧑‍🤝‍🧑Ollama와 CrewAI Ollama는 로컬 환경에서 LLM을 실행하는 오픈소스 툴입니다. 지난 글에서 Docker로 Ollama와 Open-WebUI라는 툴을 실행해서 웹 브라우저로 로컬 LLM에게 질문을 해보는 튜토리얼을 진행한 적이 있었죠. (관련 블로그 글) 이번엔 Ollama와 CrewAI를 활용해서 로컬 LLM 기반으로 블로그 글을 작성해주는 시스템을 구축해보려합니다.</description>
    <pubDate>Sun, 23 Jun 2024 00:00:00 GMT</pubDate>
  </item><item>
    <title>보안에 강한 Dockerfile 작성 팁 5가지</title>
    <link>https://guide-to-devops.github.io/blog/%EB%B3%B4%EC%95%88%EC%97%90-%EA%B0%95%ED%95%9C-Dockerfile-%EC%9E%91%EC%84%B1-%ED%8C%81-5%EA%B0%80%EC%A7%80</link>
    <guid>https://guide-to-devops.github.io/blog/%EB%B3%B4%EC%95%88%EC%97%90-%EA%B0%95%ED%95%9C-Dockerfile-%EC%9E%91%EC%84%B1-%ED%8C%81-5%EA%B0%80%EC%A7%80</guid>
    <description> 들어가기 Dockerfile은 Docker 컨테이너 이미지를 빌드할 때 사용되는 각종 설정과 명령어를 선언한 파일입니다. 우리가 개발 환경을 구축하거나 서비스를 배포할 때 누군가 미리 만들어놓은 Docker 이미지를 사용하기도 하지만, 직접 Dockerfile을 작성해서 Docker 이미지로 빌드하는 경우도 많은데요.</description>
    <pubDate>Mon, 10 Jun 2024 00:00:00 GMT</pubDate>
  </item>
    </channel>
  </rss>